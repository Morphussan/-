// –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ë–î —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
const db = require('./db'); // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–≤–æ–µ–≥–æ db.js

async function seed() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–∏–¥–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  // 1. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  await new Promise((resolve, reject) => {
    db.serialize(() => {
      db.run('DELETE FROM groups', (err) => {
        if (err) reject(err);
      });
      db.run('DELETE FROM schedule', (err) => {
        if (err) reject(err);
      });
      resolve();
    });
  });

  console.log('‚úÖ –û—á–∏—â–µ–Ω—ã —Ç–∞–±–ª–∏—Ü—ã groups –∏ schedule.');

  // 2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø
  const groups = [
    { name: '–ì—Ä—É–ø–ø–∞ A', discipline: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞' },
    { name: '–ì—Ä—É–ø–ø–∞ B', discipline: '–§–∏–∑–∏–∫–∞' },
    { name: '–ì—Ä—É–ø–ø–∞ C', discipline: '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞' },
  ];

  await Promise.all(
    groups.map((group) =>
      new Promise((resolve, reject) => {
        db.run(
          'INSERT INTO groups (name, discipline) VALUES (?, ?)',
          [group.name, group.discipline],
          (err) => (err ? reject(err) : resolve())
        );
      })
    )
  );

  console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –≥—Ä—É–ø–ø—ã.');

  // 3. –ü–æ–ª—É—á–∞–µ–º id –≥—Ä—É–ø–ø
  const groupIds = await new Promise((resolve, reject) => {
    db.all('SELECT id, name FROM groups', [], (err, rows) => {
      if (err) reject(err);
      else resolve(rows);
    });
  });

  const findGroupId = (name) => groupIds.find((g) => g.name === name)?.id;

  // 4. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
  const lessons = [
    { groupName: '–ì—Ä—É–ø–ø–∞ A', day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', time: '09:00-10:30', subject: '–ê–ª–≥–µ–±—Ä–∞', teacher: '–ò–≤–∞–Ω–æ–≤ –ò.–ò.' },
    { groupName: '–ì—Ä—É–ø–ø–∞ A', day: '–°—Ä–µ–¥–∞', time: '11:00-12:30', subject: '–ì–µ–æ–º–µ—Ç—Ä–∏—è', teacher: '–ü–µ—Ç—Ä–æ–≤ –ü.–ü.' },
    { groupName: '–ì—Ä—É–ø–ø–∞ B', day: '–í—Ç–æ—Ä–Ω–∏–∫', time: '09:00-10:30', subject: '–§–∏–∑–∏–∫–∞', teacher: '–°–∏–¥–æ—Ä–æ–≤ –°.–°.' },
    { groupName: '–ì—Ä—É–ø–ø–∞ C', day: '–ü—è—Ç–Ω–∏—Ü–∞', time: '10:00-11:30', subject: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', teacher: '–ö—É–∑–Ω–µ—Ü–æ–≤ –ö.–ö.' },
  ];

  await Promise.all(
    lessons.map((lesson) =>
      new Promise((resolve, reject) => {
        db.run(
          'INSERT INTO schedule (group_id, day, time, subject, teacher) VALUES (?, ?, ?, ?, ?)',
          [findGroupId(lesson.groupName), lesson.day, lesson.time, lesson.subject, lesson.teacher],
          (err) => (err ? reject(err) : resolve())
        );
      })
    )
  );

  console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —É—Ä–æ–∫–∏ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.');

  console.log('üéâ –°–∏–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –≤ –±–∞–∑–µ –µ—Å—Ç—å –≥—Ä—É–ø–ø—ã –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.');
  process.exit(0); // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
}

seed().catch((err) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–¥–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
  process.exit(1);
});
